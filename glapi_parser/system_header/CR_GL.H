/* Copyright (c) 2001, Stanford University
 * All rights reserved.
 *
 * See the file LICENSE.txt for information on redistributing this software.
 */
void glBarrierCreateCR (GLuint name, GLuint count);
void glBarrierDestroyCR (GLuint name);
void glBarrierExecCR (GLuint name);
void glSemaphoreCreateCR (GLuint name, GLuint count);
void glSemaphoreDestroyCR (GLuint name);
void glSemaphorePCR (GLuint name);
void glSemaphoreVCR (GLuint name);
void glBoundsInfoCR (const CRrecti *bounds, const GLbyte *payload, GLint len, GLint num_opcodes);
void glBlendColorEXT (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void glBlendEquationEXT (GLenum mode);
void glBlendFuncSeparateEXT (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorA, GLenum dfactorA);
void glMultiTexCoord1dARB (GLenum texture, GLdouble s);
void glMultiTexCoord1fARB (GLenum texture, GLfloat s);
void glMultiTexCoord1iARB (GLenum texture, GLint s);
void glMultiTexCoord1sARB (GLenum texture, GLshort s);
void glMultiTexCoord2dARB (GLenum texture, GLdouble s, GLdouble t);
void glMultiTexCoord2fARB (GLenum texture, GLfloat s, GLfloat t);
void glMultiTexCoord2iARB (GLenum texture, GLint s, GLint t);
void glMultiTexCoord2sARB (GLenum texture, GLshort s, GLshort t);
void glMultiTexCoord3dARB (GLenum texture, GLdouble s, GLdouble t, GLdouble r);
void glMultiTexCoord3fARB (GLenum texture, GLfloat s, GLfloat t, GLfloat r);
void glMultiTexCoord3iARB (GLenum texture, GLint s, GLint t, GLint r);
void glMultiTexCoord3sARB (GLenum texture, GLshort s, GLshort t, GLshort r);
void glMultiTexCoord4dARB (GLenum texture, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void glMultiTexCoord4fARB (GLenum texture, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void glMultiTexCoord4iARB (GLenum texture, GLint s, GLint t, GLint r, GLint q);
void glMultiTexCoord4sARB (GLenum texture, GLshort s, GLshort t, GLshort r, GLshort q);
void glMultiTexCoord1dvARB (GLenum texture, const GLdouble *t);
void glMultiTexCoord1fvARB (GLenum texture, const GLfloat *t);
void glMultiTexCoord1ivARB (GLenum texture, const GLint *t);
void glMultiTexCoord1svARB (GLenum texture, const GLshort *t);
void glMultiTexCoord2dvARB (GLenum texture, const GLdouble *t);
void glMultiTexCoord2fvARB (GLenum texture, const GLfloat *t);
void glMultiTexCoord2ivARB (GLenum texture, const GLint *t);
void glMultiTexCoord2svARB (GLenum texture, const GLshort *t);
void glMultiTexCoord3dvARB (GLenum texture, const GLdouble *t);
void glMultiTexCoord3fvARB (GLenum texture, const GLfloat *t);
void glMultiTexCoord3ivARB (GLenum texture, const GLint *t);
void glMultiTexCoord3svARB (GLenum texture, const GLshort *t);
void glMultiTexCoord4dvARB (GLenum texture, const GLdouble *t);
void glMultiTexCoord4fvARB (GLenum texture, const GLfloat *t);
void glMultiTexCoord4ivARB (GLenum texture, const GLint *t);
void glMultiTexCoord4svARB (GLenum texture, const GLshort *t);
void glActiveTextureARB (GLenum texture);
void glClientActiveTextureARB (GLenum texture);
/* GL_ARB_transpose_matrix */
void glLoadTransposeMatrixfARB (const GLfloat *m);
void glLoadTransposeMatrixdARB (const GLdouble *m);
void glMultTransposeMatrixfARB (const GLfloat *m);
void glMultTransposeMatrixdARB (const GLdouble *m);
/* GL_NV_register_combiners */
void glCombinerParameterfvNV (GLenum pname, const GLfloat *params);
void glCombinerParameterivNV (GLenum pname, const GLint *params);
void glCombinerParameterfNV (GLenum pname, GLfloat param);
void glCombinerParameteriNV (GLenum pname, GLint param);
void glCombinerInputNV (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void glCombinerOutputNV (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
void glFinalCombinerInputNV (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void glGetCombinerInputParameterfvNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
void glGetCombinerInputParameterivNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
void glGetCombinerOutputParameterfvNV (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
void glGetCombinerOutputParameterivNV (GLenum stage, GLenum portion, GLenum pname, GLint *params);
void glGetFinalCombinerInputParameterfvNV (GLenum variable, GLenum pname, GLfloat *params);
void glGetFinalCombinerInputParameterivNV (GLenum variable, GLenum pname, GLint *params);
/* GL_NV_register_combiners2 */
void glCombinerStageParameterfvNV (GLenum stage, GLenum pname, const GLfloat *params);
void glGetCombinerStageParameterfvNV (GLenum stage, GLenum pname, GLfloat *params);
/* GL_EXT_secondary_color */
void glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);
void glSecondaryColor3bvEXT (const GLbyte *v);
void glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);
void glSecondaryColor3dvEXT (const GLdouble *v);
void glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);
void glSecondaryColor3fvEXT (const GLfloat *v);
void glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);
void glSecondaryColor3ivEXT (const GLint *v);
void glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);
void glSecondaryColor3svEXT (const GLshort *v);
void glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);
void glSecondaryColor3ubvEXT (const GLubyte *v);
void glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);
void glSecondaryColor3uivEXT (const GLuint *v);
void glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);
void glSecondaryColor3usvEXT (const GLushort *v);
void glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void glChromiumParameteriCR (GLenum target, GLint value);
void glChromiumParameterfCR (GLenum target, GLfloat value);
void glChromiumParametervCR (GLenum target, GLenum type, GLsizei count, const GLvoid *values);
void glGetChromiumParametervCR (GLenum target, GLuint index, GLenum type, GLsizei count, GLvoid *values);
void glTexImage3DEXT (GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
/* GL_NV_vertex_array_range */
void glVertexArrayRangeNV (GLsizei length, const GLvoid *pointer);
void glFlushVertexArrayRangeNV (void);
/* GL_NV_vertex_program */
/* NOTE: the NV VertexAttrib functions are aliased to the ARB functions */
GLboolean glAreProgramsResidentNV (GLsizei n, const GLuint *ids, GLboolean *residences);
void glBindProgramNV (GLenum target, GLuint id);
void glDeleteProgramsNV (GLsizei n, const GLuint *ids);
void glExecuteProgramNV (GLenum target, GLuint id, const GLfloat * params);
void glGenProgramsNV (GLsizei n, GLuint * ids);
void glGetProgramParameterdvNV (GLenum target, GLuint index, GLenum pname, GLdouble * params);
void glGetProgramParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat * params);
void glGetProgramivNV (GLuint id, GLenum pname, GLint * params);
void glGetProgramStringNV (GLuint id, GLenum pname, GLubyte * program);
void glGetTrackMatrixivNV (GLenum target, GLuint address, GLenum pname, GLint * params);
void glGetVertexAttribdvNV (GLuint index, GLenum pname, GLdouble * params);
void glGetVertexAttribfvNV (GLuint index, GLenum pname, GLfloat * params);
void glGetVertexAttribivNV (GLuint index, GLenum pname, GLint * params);
void glGetVertexAttribPointervNV (GLuint index, GLenum pname, GLvoid ** pointer);
GLboolean glIsProgramNV (GLuint id);
void glLoadProgramNV (GLenum target, GLuint id, GLsizei len, const GLubyte * program);
void glProgramParameter4dNV (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramParameter4dvNV (GLenum target, GLuint index, const GLdouble * params);
void glProgramParameter4fNV (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glProgramParameter4fvNV (GLenum target, GLuint index, const GLfloat * params);
void glProgramParameters4dvNV (GLenum target, GLuint index, GLuint num, const GLdouble * params);
void glProgramParameters4fvNV (GLenum target, GLuint index, GLuint num, const GLfloat * params);
void glRequestResidentProgramsNV (GLsizei n, const GLuint * ids);
void glTrackMatrixNV (GLenum target, GLuint address, GLenum matrix, GLenum transform);
void glVertexAttribPointerNV (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void glVertexAttribs1dvNV (GLuint index, GLsizei n, const GLdouble * v);
void glVertexAttribs1fvNV (GLuint index, GLsizei n, const GLfloat * v);
void glVertexAttribs1svNV (GLuint index, GLsizei n, const GLshort * v);
void glVertexAttribs2dvNV (GLuint index, GLsizei n, const GLdouble * v);
void glVertexAttribs2fvNV (GLuint index, GLsizei n, const GLfloat * v);
void glVertexAttribs2svNV (GLuint index, GLsizei n, const GLshort * v);
void glVertexAttribs3dvNV (GLuint index, GLsizei n, const GLdouble * v);
void glVertexAttribs3fvNV (GLuint index, GLsizei n, const GLfloat * v);
void glVertexAttribs3svNV (GLuint index, GLsizei n, const GLshort * v);
void glVertexAttribs4dvNV (GLuint index, GLsizei n, const GLdouble * v);
void glVertexAttribs4fvNV (GLuint index, GLsizei n, const GLfloat * v);
void glVertexAttribs4svNV (GLuint index, GLsizei n, const GLshort * v);
void glVertexAttribs4ubvNV (GLuint index, GLsizei n, const GLubyte * v);
/* GL_ARB_texture_compression */
void glCompressedTexImage3DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imagesize, const GLvoid *data);
void glCompressedTexImage2DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imagesize, const GLvoid *data);
void glCompressedTexImage1DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imagesize, const GLvoid *data);
void glCompressedTexSubImage3DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imagesize, const GLvoid *data);
void glCompressedTexSubImage2DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imagesize, const GLvoid *data);
void glCompressedTexSubImage1DARB (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imagesize, const GLvoid *data);
void glGetCompressedTexImageARB (GLenum target, GLint level, GLvoid *img);
/* GL_ARB_multisample */
void glSampleCoverageARB (GLclampf value, GLboolean invert);
/* GL_NV_fence */
void glDeleteFencesNV (GLsizei n, const GLuint * fences);
void glGenFencesNV (GLsizei n, GLuint * fences);
GLboolean glIsFenceNV (GLuint fence);
GLboolean glTestFenceNV (GLuint fence);
void glGetFenceivNV (GLuint fence, GLenum pname, GLint * params);
void glFinishFenceNV (GLuint fence);
void glSetFenceNV (GLuint fence, GLenum condition);
/* GL_EXT_fog_coord / OpenGL 1.4 */
void glFogCoordfEXT (GLfloat coord);
void glFogCoordfvEXT (const GLfloat * coord);
void glFogCoorddEXT (GLdouble coord);
void glFogCoorddvEXT (const GLdouble * coord);
void glFogCoordPointerEXT (GLenum type, GLsizei stride, const GLvoid * pointer);
/* GL_ARB_point_parameters */
void glPointParameterfARB (GLenum pname, GLfloat param);
void glPointParameterfvARB (GLenum pname, const GLfloat *params);
/* GL_EXT_multi_draw_arrays */
void glMultiDrawArraysEXT (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);
void glMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum type, const GLvoid **indices, GLsizei primcount);
/* GL_ARB_window_pos */
void glWindowPos2dARB (GLdouble x, GLdouble y);
void glWindowPos2dvARB (const GLdouble *v);
void glWindowPos2fARB (GLfloat x, GLfloat y);
void glWindowPos2fvARB (const GLfloat *v);
void glWindowPos2iARB (GLint x, GLint y);
void glWindowPos2ivARB (const GLint *v);
void glWindowPos2sARB (GLshort x, GLshort y);
void glWindowPos2svARB (const GLshort *v);
void glWindowPos3dARB (GLdouble x, GLdouble y, GLdouble z);
void glWindowPos3dvARB (const GLdouble *v);
void glWindowPos3fARB (GLfloat x, GLfloat y, GLfloat z);
void glWindowPos3fvARB (const GLfloat *v);
void glWindowPos3iARB (GLint x, GLint y, GLint z);
void glWindowPos3ivARB (const GLint *v);
void glWindowPos3sARB (GLshort x, GLshort y, GLshort z);
void glWindowPos3svARB (const GLshort *v);
/* OpenGL 1.4 */
void glPointParameteri (GLenum pname, GLint param);
void glPointParameteriv (GLenum pname, const GLint *param);
/* GL_NV_fragment_program */
void glProgramNamedParameter4fNV (GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glProgramNamedParameter4dNV (GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramNamedParameter4fvNV (GLuint id, GLsizei len, const GLubyte * name, const GLfloat *v);
void glProgramNamedParameter4dvNV (GLuint id, GLsizei len, const GLubyte * name, const GLdouble *v);
void glGetProgramNamedParameterfvNV (GLuint id, GLsizei len, const GLubyte * name, GLfloat *params);
void glGetProgramNamedParameterdvNV (GLuint id, GLsizei len, const GLubyte * name, GLdouble *params);
/* GL_ARB_vertex_program */
GLboolean glIsProgramARB (GLuint program);
void glBindProgramARB (GLenum target, GLuint program);
void glDeleteProgramsARB (GLsizei n, const GLuint *programs);
void glDisableVertexAttribArrayARB (GLuint index);
void glEnableVertexAttribArrayARB (GLuint index);
void glGenProgramsARB (GLsizei n, GLuint *programs);
void glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params);
void glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params);
void glGetProgramivARB (GLenum target, GLenum pname, GLint *params);
void glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *params);
void glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *params);
void glGetProgramStringARB (GLenum target, GLenum pname, void *string);
void glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params);
void glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params);
void glGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params);
void glGetVertexAttribPointervARB (GLuint index, GLenum pname, void **pointer);
void glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);
void glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);
void glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);
void glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);
void glProgramStringARB (GLenum target, GLenum format, GLsizei len, const void *string); 
void glVertexAttrib1dARB (GLuint index, GLdouble x);
void glVertexAttrib1dvARB (GLuint index, const GLdouble *v);
void glVertexAttrib1fARB (GLuint index, GLfloat x);
void glVertexAttrib1fvARB (GLuint index, const GLfloat *v);
void glVertexAttrib1sARB (GLuint index, GLshort x);
void glVertexAttrib1svARB (GLuint index, const GLshort *v);
void glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);
void glVertexAttrib2dvARB (GLuint index, const GLdouble *v);
void glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);
void glVertexAttrib2fvARB (GLuint index, const GLfloat *v);
void glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);
void glVertexAttrib2svARB (GLuint index, const GLshort *v);
void glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);
void glVertexAttrib3dvARB (GLuint index, const GLdouble *v);
void glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);
void glVertexAttrib3fvARB (GLuint index, const GLfloat *v);
void glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);
void glVertexAttrib3svARB (GLuint index, const GLshort *v);
void glVertexAttrib4bvARB (GLuint index, const GLbyte *v);
void glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glVertexAttrib4dvARB (GLuint index, const GLdouble *v);
void glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glVertexAttrib4fvARB (GLuint index, const GLfloat *v);
void glVertexAttrib4ivARB (GLuint index, const GLint *v);
void glVertexAttrib4NbvARB (GLuint index, const GLbyte *v);
void glVertexAttrib4NivARB (GLuint index, const GLint *v);
void glVertexAttrib4NsvARB (GLuint index, const GLshort *v);
void glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void glVertexAttrib4NubvARB (GLuint index, const GLubyte *v);
void glVertexAttrib4NuivARB (GLuint index, const GLuint *v);
void glVertexAttrib4NusvARB (GLuint index, const GLushort *v);
void glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void glVertexAttrib4svARB (GLuint index, const GLshort *v);
void glVertexAttrib4ubvARB (GLuint index, const GLubyte *v);
void glVertexAttrib4uivARB (GLuint index, const GLuint *v);
void glVertexAttrib4usvARB (GLuint index, const GLushort *v);
void glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
