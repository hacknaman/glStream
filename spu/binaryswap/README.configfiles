This spu has lots of options and there are a few gotchas to look out for.  

The golden rule for this SPU:
1) The size of the parallel run must be a power of two many systems.
   i.e. 2,4,8,16,etc.

Rules for alpha compositing:
1) The data must be divided up in object space
2) The division must be done sensitive to swap order.  This means
   that the data for 0,1;2,3;3,4;etc must be next to each other, 
   01,23;34,56;etc must be next to each other.  And so on.  Basically 
   you must guarantee that the composites happen in the correct blocks.

The required arguments to the spu, they are order dependent!

	'peers' : the list of nodes in the compositing network
	'node#' : the number of this particular node
	'type'  : either 'depth' or 'alpha'

Here is an example file for use with depth compositing:

import sys
sys.path.append( "../server" )
from mothership import *

DEMODIR = r'/u/mhouston/work/chromium/bin/Linux'
NODES = 'gm://chromium8,gm://chromium24'
demo = 'psubmit2'

if len(sys.argv) > 2:
	print "Usage: %s [spu]" % sys.argv[0] 
	sys.exit(-1)

server_spu = SPU( 'render' )
server_spu.Conf( 'window_geometry', 0, 50, 256, 256 )

client_spu1 = SPU( 'binaryswap' )
client_spu1.Conf( 'peers', NODES )
client_spu1.Conf( 'window_geometry', 0, 256, 256, 256 )
client_spu1.Conf( 'node#', '0' )
client_spu1.Conf( 'type', 'depth' )

client_spu2 = SPU( 'binaryswap' )
client_spu2.Conf( 'peers', NODES )
client_spu2.Conf( 'window_geometry', 0, 256, 256, 256 )
client_spu2.Conf( 'node#', '1' )
client_spu2.Conf( 'type', 'depth' )

server_node = CRNetworkNode( 'fifo' )
server_node.AddSPU( server_spu )

pack_spu1 = SPU( 'pack' )
pack_spu1.AddServer( server_node, 'tcpip' )

pack_spu2 = SPU( 'pack' )
pack_spu2.AddServer( server_node, 'tcpip' )

client_node1 = CRApplicationNode( 'fifo' )
client_node1.AddSPU( client_spu1 )
client_node1.AddSPU( pack_spu1 )

client_node2 = CRApplicationNode( 'fifo' )
client_node2.AddSPU( client_spu2 )
client_node2.AddSPU( pack_spu2 )

client_node1.SetApplication( '%s/%s 0' % (DEMODIR, demo) )
client_node1.StartDir( DEMODIR )

client_node2.SetApplication( '%s/%s 1' % (DEMODIR, demo) )
client_node2.StartDir( DEMODIR )

cr = CR()
cr.MTU( 32*1024 )
cr.AddNode( client_node1 )
cr.AddNode( client_node2 )
cr.AddNode( server_node )
cr.Go()