# Copyright (c) 2001, Stanford University
# All rights reserved.
#
# See the file LICENSE.txt for information on redistributing this software.

import sys,os;
import cPickle;
import string;
import re;

parsed_file = open( "../../glapi_parser/gl_header.parsed", "rb" )
gl_mapping = cPickle.load( parsed_file )

sys.path.append( "../../opengl_stub" )

import stub_common;

keys = gl_mapping.keys()
keys.sort();

stub_common.CopyrightC()
print """

/* DO NOT EDIT - THIS FILE AUTOMATICALLY GENERATED BY spuchange.py SCRIPT */

#include "cr_spu.h"
#include "cr_error.h"

void crSPUChangeInterface( SPUDispatchTable *table, void *orig_func, void *new_func )
{
	struct _copy_list_node *temp;
	if (table->copy_of != NULL)
	{
		crSPUChangeInterface( table->copy_of, orig_func, new_func );
		return;
	}
"""

for func_name in keys:
	(return_type, names, types) = gl_mapping[func_name]
	print '\tif (table->%s == orig_func)' % func_name
	print '\t{'
	print '\t\ttable->%s = (%sFunc_t)new_func;' % (func_name, func_name)
	print '\t\tfor (temp = table->copyList ; temp ; temp = temp->next)'
	print '\t\t{'
	print '\t\t\tif (temp->copy->%s == orig_func)' % func_name
	print' \t\t\t{'
	print '\t\t\t\ttemp->copy->%s = (%sFunc_t)new_func;' % (func_name, func_name)
	print' \t\t\t}'
	print '\t\t}'
	print '\t}'

print '\tif (table->chain_parent != NULL)'
print '\t{'
print '\t\tcrSPUChangeInterface( table->chain_parent, orig_func, new_func );'
print '\t}'
print '}'
