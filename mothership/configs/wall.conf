import os;
import sys;
sys.path.append( "../server" )
from mothership import *

cr = CR()
cr.MTU( 1024*1024 );

TILE_COLS = 4
TILE_ROWS = 3

ACTUAL_COLS=4
ACTUAL_ROWS=3

TILE_WIDTH = 1024
TILE_HEIGHT = 768


TILES = [ (29, 2976, 0    ), 
		  (30, 1984, 0    ),
		  (15,  992, 0    ),
		  (32,    0, 0    ),
		  (21, 2976, 736  ),
		   (7, 1984, 736  ),
		   (8,  992, 736  ),
		  (24,    0, 736  ),
		  (13, 2976, 1472 ),
		  (14, 1984, 1472 ),
		  (16,  992, 1472 ),
		  (22,    0, 1472 ),
]

tilesortspu = SPU( 'tilesort' )
tilesortspu.Conf( 'draw_bbox', 1 )
tilesortspu.Conf( 'bbox_line_width', 25 )
tilesortspu.Conf( 'optimize_bucket', 0 )
tilesortspu.Conf( 'fake_window_dims', 256, 256 );

SPUdir = '/u/humper/work/cr/lib/Linux' 

clientnode = CRApplicationNode( 'chromium' )
clientnode.ClientDLL( SPUdir + '/libcrfaker.so' )
clientnode.SPUDir( SPUdir )
clientnode.SetApplication( sys.argv[1] )
clientnode.StartDir( r'c:\win32' )
clientnode.AddSPU( tilesortspu )

for row in range(TILE_ROWS):
	for col in range(TILE_COLS):
		(machine, x, y) = TILES[row*ACTUAL_COLS + col]
		node = CRNetworkNode( 'chromium%d' % machine )
		node.AddTile( x, y, TILE_WIDTH, TILE_HEIGHT );

		renderspu = SPU( 'render' )
		renderspu.Conf( 'window_geometry', 0, 0, TILE_WIDTH, TILE_HEIGHT )
		renderspu.Conf( 'stencil_bits', 8 )

		node.AddSPU( renderspu )
		node.SPUDir( SPUdir )
		cr.AddNode( node );

		tilesortspu.AddServer( node, protocol='tcpip' )

cr.AddNode( clientnode )
cr.Go()
