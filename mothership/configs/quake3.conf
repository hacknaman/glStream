import sys
sys.path.append( '../server' )
from mothership import *

if len(sys.argv) > 2:
	print 'Usage: %s [spu]' % sys.argv[0] 
	sys.exit(-1)

CR_BIN_DIR = r'c:\q3arena'
demo = 'quake3'

if len(sys.argv) == 2:
	clientspuname = sys.argv[1]
else:
	clientspuname = 'pack'

server_spu = SPU( 'render' )
client_spu = SPU( clientspuname )
client_printspu = SPU( 'print' )
server_printspu = SPU( 'print' )

server_spu.Conf( 'window_geometry', 0, 0, 1024, 768 )
server_spu.Conf( 'ontop', 1 )
client_spu.Conf( 'window_geometry', 0, 0, 1024, 768 )
client_spu.Conf( 'ontop', 1 )
client_printspu.Conf( 'log_file', "/tmp/%s_CLIENT_LOG" % demo )
server_printspu.Conf( 'log_file', "/tmp/%s_SERVER_LOG" % demo )

server_node = CRNetworkNode( )
#server_node.AddSPU( server_printspu )
#server_node.AddSPU( server_spu )

if (clientspuname == 'tilesort' ):
	server_node.AddTile( 0, 0, 640, 480 )

client_node = CRApplicationNode( )
#client_node.AddSPU( client_printspu )
client_node.AddSPU( client_spu )
client_spu.AddServer( server_node, 'tcpip' )

client_node.SetApplication( '%s\%s' % (CR_BIN_DIR, demo) )
client_node.StartDir( CR_BIN_DIR )

cr = CR()
cr.MTU( 32*1024 );
cr.AddNode( client_node )
cr.AddNode( server_node )
cr.Go()
