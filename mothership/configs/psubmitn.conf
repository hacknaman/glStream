# Copyright (c) 2001, Stanford University
# All rights reserved
#
# See the file LICENSE.txt for information on redistributing this software.

import sys
sys.path.append( "../server" )
from mothership import *

DEMODIR = r'/home/Chromium/cr/bin/Linux'
demo = 'psubmit'

# This is the number of submitters/clients.  Start that number of crappfakers.
NumClients = 3

# Set this var to one if you want to do sort-last Z compositing with the
# readback SPU.
ZComp = 1




if len(sys.argv) > 2:
	print "Usage: %s [spu]" % sys.argv[0] 
	sys.exit(-1)

renderspu = SPU( 'render' )

clientspu = {}
clientspuZ = {}
node = {}

if len(sys.argv) == 2:
	clientspuname = sys.argv[1]
else:
	clientspuname = 'pack'

for i in range(0, NumClients):
	if (ZComp):
		clientspuZ[i] = SPU('readback')
		clientspuZ[i].Conf('extract_depth', '1')

	clientspu[i] = SPU( clientspuname )

#clientspu1.Conf( 'draw_bbox', 1 )
#clientspu1.Conf( 'bbox_line_width', 2 )
#clientspu2.Conf( 'draw_bbox', 1 )
#clientspu2.Conf( 'bbox_line_width', 2 )

#serverprintspu = SPU( 'print' )
#serverprintspu.Conf( 'log_file', '/tmp/%s_SERVER_LOG' % demo )

node1 = CRNetworkNode( )
#node1.AddSPU( serverprintspu )
node1.AddSPU( renderspu )

renderspu.Conf( 'window_geometry', 500, 500, 500, 500 )
if (clientspuname == 'tilesort' ):
	node1.AddTile( 0, 0, 500, 500 )

for i in range(0, NumClients):
	node[i] = CRApplicationNode( )
	node[i].SetApplication( '%s/%s -rank %d -size %d' % (DEMODIR, demo, i, NumClients) )
	node[i].StartDir( DEMODIR )
	if (ZComp):
		node[i].AddSPU( clientspuZ[i] )
	node[i].AddSPU( clientspu[i] )
	clientspu[i].AddServer( node1, 'tcpip' )


cr = CR()
cr.MTU( 16*1024 );
cr.AddNode( node1 )
for i in range(0, NumClients):
	cr.AddNode( node[i] )
cr.Go()
