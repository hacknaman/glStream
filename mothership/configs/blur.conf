# Chromium configuration produced by graph.py

import string
import sys
sys.path.append( "../server" )
from mothership import *

MOTHERSHIP_OPTIONS = [
	("minimum_window_size", [0, 0]),
	("match_window_title", ""),
	("track_window_size", 1),
	("show_cursor", 0),
	("MTU", 1048576),
	("auto_start", 0),
	("default_app", "atlantis"),
	("zeroth_arg", ""),
	("default_dir", crbindir),
]

# Look for some special mothership params
for (name, value) in MOTHERSHIP_OPTIONS:
	if name == "zeroth_arg":
		ZEROTH_ARG = value
	elif name == "default_dir":
		DEFAULT_DIR = value
	elif name == "auto_start":
		AUTO_START = value
	elif name == "default_app":
		DEFAULT_APP = value

# Get program name
if len(sys.argv) == 1:
	program = DEFAULT_APP
elif len(sys.argv) == 2:
	program = sys.argv[1]
else:
	print "Usage: %s <program>" % sys.argv[0] 
	sys.exit(-1)
if program == "":
	print "No program to run!"
	sys.exit(-1)


cr = CR()

nodes = range(1)

nodes[0] = CRApplicationNode('localhost')
nodes[0].StartDir( DEFAULT_DIR )
nodes[0].SetApplication( program )
nodes[0].SetPosition(20, 65)
cr.AddNode(nodes[0])
if AUTO_START:
	nodes[0].AutoStart( [ "/bin/sh", "-c", "LD_LIBRARY_PATH=%s MOTHERSHIP=localhost %s/crappfaker" % (crlibdir, crbindir) ] )


# application nodes[0]
spus = range(2)
spus[0] = SPU('motionblur')
spus[0].Conf('blur', 'Lots')
nodes[0].AddSPU(spus[0])
spus[1] = SPU('render')
spus[1].Conf('resizable', '1')
nodes[0].AddSPU(spus[1])



# Set mothership params
for (name, value) in MOTHERSHIP_OPTIONS:
	cr.Conf(name, value)
cr.Go()
