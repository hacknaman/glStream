# Copyright (c) 2001, Stanford University
# All rights reserved
#
# See the file LICENSE.txt for information on redistributing this software.

import sys
sys.path.append( "../server" )
from mothership import *

if len(sys.argv) > 1:
	demo = sys.argv[1]
else:
	demo = "bboxtest"

cr = CR()
cr.MTU( 1024*1024 )

TILE_COLS = 2
TILE_ROWS = 1

TILE_WIDTH = 300
TILE_HEIGHT = 600

clientspuname = 'tilesort'
if clientspuname == 'pack' and TILE_ROWS*TILE_COLS != 1:
	print >> sys.stderr, "You cant use the pack SPU with more than one server."
	sys.exit(0)

tilesortspu = SPU( clientspuname )
#tilesortspu.Conf('preserve_aspect_ratio', 1)
tilesortspu.Conf('bucket_mode', 'Uniform Grid')
tilesortspu.Conf('draw_bbox', 0)
tilesortspu.Conf('bbox_scale', 1.0)

clientnode = CRApplicationNode( )
clientnode.StartDir( crbindir )
clientnode.SetApplication( demo )
clientnode.AddSPU( tilesortspu )

for row in range(TILE_ROWS):
	for col in range(TILE_COLS):
		renderspu = SPU( 'render' )
		renderspu.Conf( 'window_geometry', [col*(TILE_WIDTH+10), 1.1*row*TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT] )

		node = CRNetworkNode( )
		if clientspuname == 'tilesort':
			node.AddTile( col*TILE_WIDTH, (TILE_ROWS-row-1)*TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT )

		node.Conf('optimize_bucket', 1)
		#node.Conf('vertprog_projection_param', 'ModelViewProj')
		node.AddSPU( renderspu )
		cr.AddNode( node )

		tilesortspu.AddServer( node, protocol='tcpip', port=7000 + row*TILE_COLS + col )


cr.AddNode( clientnode )

cr.Go()
