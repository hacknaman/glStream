# Copyright (c) 2001, Stanford University
# All rights reserved
#
# See the file LICENSE.txt for information on redistributing this software.

# Demonstrate parallel submission with sort-first rendering.

import sys
sys.path.append( "../server" )
from mothership import *

Demo = 'psubmit'

TileWidth = 350
TileHeight = 500

Demo = os.path.join(crbindir, Demo)

# Set up the first server node
servernode1 = CRNetworkNode( )
renderspu = SPU( 'render' )
renderspu.Conf( 'window_geometry', [0, 0, TileWidth, TileHeight] )
# only specifying visual to work-around ATI FireGL problem
renderspu.Conf('default_visual', 'rgb, double, depth')
servernode1.AddSPU( renderspu )
servernode1.AddTile( 0, 0, TileWidth, TileHeight )

# Set up second server node
servernode2 = CRNetworkNode( )
renderspu = SPU( 'render' )
renderspu.Conf( 'window_geometry', [TileWidth+20, 0, TileWidth, TileHeight] )
# only specifying visual to work-around ATI FireGL problem
renderspu.Conf('default_visual', 'rgb, double, depth')
servernode2.AddSPU( renderspu )
servernode2.AddTile( TileWidth, 0, TileWidth, TileHeight )

# Set up first app/client node (note -clear and -swap)
appnode1 = CRApplicationNode(  )
appnode1.SetApplication( '%s -rank 0 -size 2 -clear -swap' % Demo )
appnode1.StartDir( crbindir )
spu = SPU('tilesort')
spu.Conf('fake_window_dims', [TileWidth * 2, TileHeight] )
appnode1.AddSPU( spu )
spu.AddServer( servernode1, protocol='tcpip', port=7000 )
spu.AddServer( servernode2, protocol='tcpip', port=7001 )

# Set up second app/client node
appnode2 = CRApplicationNode( )
appnode2.SetApplication( '%s -rank 1 -size 2' % Demo )
appnode2.StartDir( crbindir )
spu = SPU('tilesort')
spu.Conf('fake_window_dims', [TileWidth * 2, TileHeight] )
appnode2.AddSPU( spu )
spu.AddServer( servernode1, protocol='tcpip', port=7000 )
spu.AddServer( servernode2, protocol='tcpip', port=7001 )

cr = CR()
cr.MTU( 32*1024 )
cr.AddNode( servernode1 )
cr.AddNode( servernode2 )
cr.AddNode( appnode1 )
cr.AddNode( appnode2 )
cr.Go()
