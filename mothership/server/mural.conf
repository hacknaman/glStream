from mothership import *

cr = CR()
cr.MTU( 1024*1024 );

#TILE_COLS = 4
#TILE_ROWS = 3

TILE_COLS = 2
TILE_ROWS = 2

TILE_WIDTH = 320
TILE_HEIGHT = 240

tilesortspu = SPU( 'tilesort' )
clientprintspu = SPU( 'print' )
serverprintspu = SPU( 'print' )

#SPUdir = '/u/humper/work/cr/lib/Linux' 

clientnode = CRApplicationNode( 'sluff' )
#clientnode.ClientDLL( SPUdir + '/libcrfaker.so' )
#clientnode.SPUDir( SPUdir )
clientnode.SetApplication( r'atlantis' )
clientprintspu.Conf( 'log_file', 'CLIENT_LOG' );
#clientnode.AddSPU( clientprintspu )
clientnode.AddSPU( tilesortspu )

for col in range(TILE_COLS):
	for row in range(TILE_ROWS):
		renderspu = SPU( 'render' )
		renderspu.Conf( 'window_geometry', 1.1*col*TILE_WIDTH, 1.1*row*TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT )
		#renderspu.Conf( 'window_geometry', 0, 0, TILE_WIDTH, TILE_HEIGHT )
		renderspu.Conf( 'num_tiles', 1 )
		renderspu.Conf( 'tile1', col*TILE_WIDTH, row*TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT );

		node = CRNetworkNode( 'sluff' );
		node.Conf( 'port', 7000 + row*TILE_COLS + col )
		#node = CRNetworkNode( 'chromium%d' % (row*TILE_COLS + col) )

		serverprintspu.Conf( 'log_file', 'SERVER_LOG' );
		#node.AddSPU( serverprintspu )
		node.AddSPU( renderspu )
		#node.SPUDir( SPUdir )
		cr.AddNode( node );

		tilesortspu.AddServer( node )


cr.AddNode( clientnode )
if len(sys.argv) > 1:
	cr.Go( int(sys.argv[1] ))
else:
	cr.Go()
